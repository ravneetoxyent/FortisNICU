drop database if exists maintenance ;
create database maintenance ;
use maintenance ;
create table ComponentMasterInfo ( componentId  Char( 25)  PRIMARY KEY   , indexId  INT  ,  INDEX ( componentId) ) TYPE = INNODB ;
create table ComponentDefectInfo ( defectId  Char( 25)  PRIMARY KEY   , defectCompId  Char( 25)   , occurence_counter   INT  , severity  INT  , defect_occured  TIMESTAMP  ,  INDEX ( defectId) ) TYPE = INNODB ;
create table ComponentActionInfo ( actionId  Char( 25)   , maintenance_Id  Char( 25)  PRIMARY KEY   , actionDefectId  Char( 25)   , actionCompId  Char( 25)   , action_taken  TIMESTAMP  ,  INDEX ( maintenance_Id) ) TYPE = INNODB ;create table ComponentHealthInfo ( actionIndexId  INT PRIMARY KEY  AUTO_INCREMENT , compHealthId  Char( 25)   , color  Char( 25)   ,  INDEX ( actionIndexId) ) TYPE = INNODB ;
create table maintTemp ( compId  TEXT  ) TYPE = INNODB ;
create index id_index0 ON ComponentHealthInfo (compHealthId );
create index id_index1 ON ComponentActionInfo (actionDefectId );
create index id_index2 ON ComponentActionInfo (actionCompId );
create index id_index3 ON ComponentDefectInfo (defectCompId );
alter table ComponentHealthInfo  add foreign key ( compHealthId )  references ComponentMasterInfo( componentId );
alter table ComponentActionInfo  add foreign key ( actionDefectId )  references ComponentDefectInfo( defectId );
alter table ComponentActionInfo  add foreign key ( actionCompId )  references ComponentMasterInfo( componentId );
alter table ComponentDefectInfo  add foreign key ( defectCompId )  references ComponentMasterInfo( componentId );
insert into componentmasterinfo(componentId,indexId) values ('storage.comp',1);
insert into componentmasterinfo(componentId,indexId) values ('de.stoneone.component.billingTracking',2);
insert into componentmasterinfo(componentId,indexId) values ('maint.comp',3);
insert into componentmasterinfo(componentId,indexId) values ('maintDBComponent',4);
insert into componentmasterinfo(componentId,indexId) values ('de.stoneone.component.importcomponent',5);
insert into componentmasterinfo(componentId,indexId) values ('importDBComponent',6);
insert into componentmasterinfo(componentId,indexId) values ('billingDBComponent',7);
insert into componentmasterinfo(componentId,indexId) values ('id.rendering',8);
insert into componentmasterinfo(componentId,indexId) values ('dbCompnent',9);
insert into componentmasterinfo(componentId,indexId) values ('userAdminDBComponent',10);
insert into componentmasterinfo(componentId,indexId) values ('de.stoneone.component.useradmin',11);
insert into componentmasterinfo(componentId,indexId) values ('de.gipmbh.TestComponent',12);
insert into componentmasterinfo(componentId,indexId) values ('de.stoneone.component.auditLogging',13);
insert into componentmasterinfo(componentId,indexId) values ('auditLoggingDBComponent',14);
insert into componentmasterinfo(componentId,indexId) values ('de.stoneone.component.logging.LoggingComponent',15);
insert into componentmasterinfo(componentId,indexId) values ('export.Component',16);
insert into componentmasterinfo(componentId,indexId) values ('dacomponent',17);
insert into componentmasterinfo(componentId,indexId) values ('ldapComp',18);


insert into componenthealthinfo(compHealthId , color) values ('storage.comp','green');
insert into componenthealthinfo(compHealthId , color) values ('de.stoneone.component.billingTracking','green');
insert into componenthealthinfo(compHealthId , color) values ('maint.comp','green');
insert into componenthealthinfo(compHealthId , color) values ('maintDBComponent','green');
insert into componenthealthinfo(compHealthId , color) values ('de.stoneone.component.importcomponent','green');
insert into componenthealthinfo(compHealthId , color) values ('importDBComponent','green');
insert into componenthealthinfo(compHealthId , color) values ('billingDBComponent','green');
insert into componenthealthinfo(compHealthId , color) values ('id.rendering','green');
insert into componenthealthinfo(compHealthId , color) values ('dbCompnent','green');
insert into componenthealthinfo(compHealthId , color) values ('userAdminDBComponent','green');
insert into componenthealthinfo(compHealthId , color) values ('de.stoneone.component.useradmin','green');
insert into componenthealthinfo(compHealthId , color) values ('de.gipmbh.TestComponent','green');
insert into componenthealthinfo(compHealthId , color) values ('de.stoneone.component.auditLogging','green');
insert into componenthealthinfo(compHealthId , color) values ('auditLoggingDBComponent','green');
insert into componenthealthinfo(compHealthId , color) values ('de.stoneone.component.logging.LoggingComponent','green');
insert into componenthealthinfo(compHealthId , color) values ('export.Component','green');
insert into componenthealthinfo(compHealthId , color) values ('dacomponent','green');
insert into componenthealthinfo(compHealthId , color) values ('ldapComp','green');

